"""init

Revision ID: 0001
Revises: 
Create Date: 2023-04-12 22:46:42.968361

"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('create schema if not exists  web_wallet')
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";')
    op.create_table('categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('clients',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('currencies',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('currency_id', sa.UUID(), nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['web_wallet.clients.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['web_wallet.currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('clients_categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['web_wallet.categories.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['web_wallet.clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('costs',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['web_wallet.accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['web_wallet.categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    op.create_table('income',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated', sqlalchemy_utils.types.arrow.ArrowType(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['web_wallet.accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['web_wallet.categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='web_wallet'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('income', schema='web_wallet')
    op.drop_table('costs', schema='web_wallet')
    op.drop_table('clients_categories', schema='web_wallet')
    op.drop_table('accounts', schema='web_wallet')
    op.drop_table('currencies', schema='web_wallet')
    op.drop_table('clients', schema='web_wallet')
    op.drop_table('categories', schema='web_wallet')
    # ### end Alembic commands ###
